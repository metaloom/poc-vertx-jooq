/*
 * This file is generated by jOOQ.
 */
package io.metaloom.poc.db.jooq;


import io.metaloom.poc.db.jooq.tables.Group;
import io.metaloom.poc.db.jooq.tables.User;
import io.metaloom.poc.db.jooq.tables.UserGroup;
import io.metaloom.poc.db.jooq.tables.records.GroupRecord;
import io.metaloom.poc.db.jooq.tables.records.UserGroupRecord;
import io.metaloom.poc.db.jooq.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<GroupRecord> GROUP_NAME_KEY = Internal.createUniqueKey(Group.GROUP, DSL.name("group_name_key"), new TableField[] { Group.GROUP.NAME }, true);
    public static final UniqueKey<GroupRecord> GROUP_PKEY = Internal.createUniqueKey(Group.GROUP, DSL.name("group_pkey"), new TableField[] { Group.GROUP.UUID }, true);
    public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, DSL.name("user_pkey"), new TableField[] { User.USER.UUID }, true);
    public static final UniqueKey<UserRecord> USER_USERNAME_KEY = Internal.createUniqueKey(User.USER, DSL.name("user_username_key"), new TableField[] { User.USER.USERNAME }, true);
    public static final UniqueKey<UserGroupRecord> USER_GROUP_PKEY = Internal.createUniqueKey(UserGroup.USER_GROUP, DSL.name("user_group_pkey"), new TableField[] { UserGroup.USER_GROUP.USER_UUID, UserGroup.USER_GROUP.GROUP_UUID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GroupRecord, UserRecord> GROUP__GROUP_CREATOR_UUID_FKEY = Internal.createForeignKey(Group.GROUP, DSL.name("group_creator_uuid_fkey"), new TableField[] { Group.GROUP.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { User.USER.UUID }, true);
    public static final ForeignKey<GroupRecord, UserRecord> GROUP__GROUP_EDITOR_UUID_FKEY = Internal.createForeignKey(Group.GROUP, DSL.name("group_editor_uuid_fkey"), new TableField[] { Group.GROUP.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { User.USER.UUID }, true);
    public static final ForeignKey<UserRecord, UserRecord> USER__USER_CREATOR_UUID_FKEY = Internal.createForeignKey(User.USER, DSL.name("user_creator_uuid_fkey"), new TableField[] { User.USER.CREATOR_UUID }, Keys.USER_PKEY, new TableField[] { User.USER.UUID }, true);
    public static final ForeignKey<UserRecord, UserRecord> USER__USER_EDITOR_UUID_FKEY = Internal.createForeignKey(User.USER, DSL.name("user_editor_uuid_fkey"), new TableField[] { User.USER.EDITOR_UUID }, Keys.USER_PKEY, new TableField[] { User.USER.UUID }, true);
    public static final ForeignKey<UserGroupRecord, GroupRecord> USER_GROUP__USER_GROUP_GROUP_UUID_FKEY = Internal.createForeignKey(UserGroup.USER_GROUP, DSL.name("user_group_group_uuid_fkey"), new TableField[] { UserGroup.USER_GROUP.GROUP_UUID }, Keys.GROUP_PKEY, new TableField[] { Group.GROUP.UUID }, true);
    public static final ForeignKey<UserGroupRecord, UserRecord> USER_GROUP__USER_GROUP_USER_UUID_FKEY = Internal.createForeignKey(UserGroup.USER_GROUP, DSL.name("user_group_user_uuid_fkey"), new TableField[] { UserGroup.USER_GROUP.USER_UUID }, Keys.USER_PKEY, new TableField[] { User.USER.UUID }, true);
}
